
role role_A(A:agent,B:agent,Ka:public_key,Kb:public_key,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,IDg:text,Kug:text,Ceg:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ Kug':=new() /\ IDg':=new() /\ secret(IDg',sec_3,{A,B}) /\ SND({IDg'.Kug'}_Kb)
		1. State=1 /\ RCV({Ceg'}_Ka) =|> State':=2
end role

role role_B(B:agent,A:agent,Ka:public_key,Kb:public_key,SND,RCV:channel(dy))
played_by B
def=
	local
		State:nat,IDg:text,Kug:text,Ceg:text
	init
		State := 0
	transition
		1. State=0 /\ RCV({IDg'.Kug'}_Kb) =|> State':=1 /\ witness(B,A,auth_2,Kug') /\ secret(IDg',sec_3,{A,B}) /\ Ceg':=new() /\ SND({Ceg'}_Ka)
end role

role session1(B:agent,A:agent,Ka:public_key,Kb:public_key)
def=
	local
		SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_B(B,A,Ka,Kb,SND2,RCV2) /\ role_A(A,B,Ka,Kb,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:hash_func,ka:public_key,controller:agent,gateway:agent,kb:public_key,auth_1:protocol_id,auth_2:protocol_id,sec_3:protocol_id
	intruder_knowledge = {gateway,controller,ka,kb}
	composition
		session1(controller,gateway,ka,kb)
end role

goal
	authentication_on auth_1
	authentication_on auth_2
	secrecy_of sec_3
end goal

environment()
